//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.15 at 03:22:47 PM GMT 
//


package uk.nhs.ctp.service.report.org.hl7.v3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BusinessSectionType_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="BusinessSectionType_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Administrative Information"/>
 *     &lt;enumeration value="Presenting Information"/>
 *     &lt;enumeration value="Current Care Event Information"/>
 *     &lt;enumeration value="Advice, Recommendations and Future Plan"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "BusinessSectionType_displayName")
@XmlEnum
public enum BusinessSectionTypeDisplayName {

    @XmlEnumValue("Administrative Information")
    ADMINISTRATIVE_INFORMATION("Administrative Information"),
    @XmlEnumValue("Presenting Information")
    PRESENTING_INFORMATION("Presenting Information"),
    @XmlEnumValue("Current Care Event Information")
    CURRENT_CARE_EVENT_INFORMATION("Current Care Event Information"),
    @XmlEnumValue("Advice, Recommendations and Future Plan")
    ADVICE_RECOMMENDATIONS_AND_FUTURE_PLAN("Advice, Recommendations and Future Plan");
    private final String value;

    BusinessSectionTypeDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BusinessSectionTypeDisplayName fromValue(String v) {
        for (BusinessSectionTypeDisplayName c: BusinessSectionTypeDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
