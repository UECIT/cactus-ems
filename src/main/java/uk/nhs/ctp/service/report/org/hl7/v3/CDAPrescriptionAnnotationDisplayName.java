//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.15 at 03:22:47 PM GMT 
//


package uk.nhs.ctp.service.report.org.hl7.v3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CDAPrescriptionAnnotation_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CDAPrescriptionAnnotation_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Supply Instructions"/>
 *     &lt;enumeration value="Dose Instructions"/>
 *     &lt;enumeration value="Additional Instructions"/>
 *     &lt;enumeration value="Medication administration Instructions"/>
 *     &lt;enumeration value="Medication administration type"/>
 *     &lt;enumeration value="Acute Script Flag"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CDAPrescriptionAnnotation_displayName")
@XmlEnum
public enum CDAPrescriptionAnnotationDisplayName {

    @XmlEnumValue("Supply Instructions")
    SUPPLY_INSTRUCTIONS("Supply Instructions"),
    @XmlEnumValue("Dose Instructions")
    DOSE_INSTRUCTIONS("Dose Instructions"),
    @XmlEnumValue("Additional Instructions")
    ADDITIONAL_INSTRUCTIONS("Additional Instructions"),
    @XmlEnumValue("Medication administration Instructions")
    MEDICATION_ADMINISTRATION_INSTRUCTIONS("Medication administration Instructions"),
    @XmlEnumValue("Medication administration type")
    MEDICATION_ADMINISTRATION_TYPE("Medication administration type"),
    @XmlEnumValue("Acute Script Flag")
    ACUTE_SCRIPT_FLAG("Acute Script Flag");
    private final String value;

    CDAPrescriptionAnnotationDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CDAPrescriptionAnnotationDisplayName fromValue(String v) {
        for (CDAPrescriptionAnnotationDisplayName c: CDAPrescriptionAnnotationDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
