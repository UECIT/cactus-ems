//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.15 at 03:22:47 PM GMT 
//


package uk.nhs.ctp.service.report.org.hl7.v3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RequesterRelationshipType_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RequesterRelationshipType_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Parent/Legal Guardian of child"/>
 *     &lt;enumeration value="Clinician on behalf of an adult"/>
 *     &lt;enumeration value="Clinician on behalf of a child"/>
 *     &lt;enumeration value="Power of Attorney"/>
 *     &lt;enumeration value="Court Appointed"/>
 *     &lt;enumeration value="Patient"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "RequesterRelationshipType_displayName")
@XmlEnum
public enum RequesterRelationshipTypeDisplayName {

    @XmlEnumValue("Parent/Legal Guardian of child")
    PARENT_LEGAL_GUARDIAN_OF_CHILD("Parent/Legal Guardian of child"),
    @XmlEnumValue("Clinician on behalf of an adult")
    CLINICIAN_ON_BEHALF_OF_AN_ADULT("Clinician on behalf of an adult"),
    @XmlEnumValue("Clinician on behalf of a child")
    CLINICIAN_ON_BEHALF_OF_A_CHILD("Clinician on behalf of a child"),
    @XmlEnumValue("Power of Attorney")
    POWER_OF_ATTORNEY("Power of Attorney"),
    @XmlEnumValue("Court Appointed")
    COURT_APPOINTED("Court Appointed"),
    @XmlEnumValue("Patient")
    PATIENT("Patient");
    private final String value;

    RequesterRelationshipTypeDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RequesterRelationshipTypeDisplayName fromValue(String v) {
        for (RequesterRelationshipTypeDisplayName c: RequesterRelationshipTypeDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
