//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.15 at 03:22:47 PM GMT 
//


package uk.nhs.ctp.service.report.org.hl7.v3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for HealthSpaceBusinessSectionType_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="HealthSpaceBusinessSectionType_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Patient Comments"/>
 *     &lt;enumeration value="Dietary Requirements"/>
 *     &lt;enumeration value="Faith Preferences"/>
 *     &lt;enumeration value="Disability Requirements"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "HealthSpaceBusinessSectionType_displayName")
@XmlEnum
public enum HealthSpaceBusinessSectionTypeDisplayName {

    @XmlEnumValue("Patient Comments")
    PATIENT_COMMENTS("Patient Comments"),
    @XmlEnumValue("Dietary Requirements")
    DIETARY_REQUIREMENTS("Dietary Requirements"),
    @XmlEnumValue("Faith Preferences")
    FAITH_PREFERENCES("Faith Preferences"),
    @XmlEnumValue("Disability Requirements")
    DISABILITY_REQUIREMENTS("Disability Requirements");
    private final String value;

    HealthSpaceBusinessSectionTypeDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static HealthSpaceBusinessSectionTypeDisplayName fromValue(String v) {
        for (HealthSpaceBusinessSectionTypeDisplayName c: HealthSpaceBusinessSectionTypeDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
